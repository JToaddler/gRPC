type Query {
 getPet(name: String): [Pet]
 searchPet(filter: PetFilter!): [Pet]
 searchOwner(ownerFilter: OwnerFilter): [Person]
}

type Mutation {
 addPet(petInput: PetInput!): [Pet]
 addOwner(owner: PersonInput): [Person]
 updateOwner(petName: String, ownerName: String): Pet
}

type Pet {
	name: String
 	color: String
 	kind: PetKind
 	owner: Person
}

input PetInput {
    name: String
 	color: String
 	kind: PetKind
}

enum PetKind {
	CAT, DOG, BIRD, FISH, REPTILE
}

input PetFilter {
    name: String
    color: String
    kind: PetKind
}

input OwnerFilter {
    name: String
    age: Int
}

type Person {
    name: String
    age: Int
    address: Address
}

type Address {
    addressLine1: String
    addressLine2: String
    city: String
    state: String
    zipCode: String
}

input PersonInput {
    name: String
    age: Int
    address: AddressInput
}

input AddressInput {
    addressLine1: String
    addressLine2: String
    city: String
    state: String
    zipCode: String
}
